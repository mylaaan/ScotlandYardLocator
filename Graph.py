from Node import Node
from Edge import Edge


class Graph:


    def __init__(self):
        self.node_list = []
        self.currently_possible_node_numbers = []
        self.old_possible_node_numbers = []

    def build_graph(self):
        taxi = ["taxi"]
        bus = ["bus"]
        underground = ["underground"]
        taxi_bus = ["taxi", "bus"]
        bus_underground = ["bus", "underground"]
        self.add_edge(1, 9, taxi)
        self.add_edge(1, 8, taxi_bus)
        self.add_edge(1, 46, bus_underground)
        self.add_edge(2, 20, taxi)
        self.add_edge(2, 10, taxi)
        self.add_edge(3, 11, taxi_bus)
        self.add_edge(3, 4, taxi)
        self.add_edge(4, 3, taxi)
        self.add_edge(4, 13, taxi)
        self.add_edge(5, 15, taxi)
        self.add_edge(5, 16, taxi)
        self.add_edge(6, 7, taxi)
        self.add_edge(6, 7, taxi)
        self.add_edge(6, 29, taxi)
        self.add_edge(7, 6, taxi)
        self.add_edge(7, 17, taxi)
        self.add_edge(7, 42, bus)
        self.add_edge(8, 1, taxi)
        self.add_edge(8, 18, taxi)
        self.add_edge(8, 19, taxi)
        self.add_edge(9, 1, taxi)
        self.add_edge(9, 19, taxi)
        self.add_edge(9, 20, taxi)
        self.add_edge(10, 2, taxi)
        self.add_edge(10, 11, taxi)
        self.add_edge(10, 21, taxi)
        self.add_edge(10, 34, taxi)
        self.add_edge(11, 3, taxi)
        self.add_edge(11, 10, taxi)
        self.add_edge(11, 22, taxi)
        self.add_edge(12, 3, taxi)
        self.add_edge(12, 23, taxi)
        self.add_edge(12, 23, taxi)
        self.add_edge(13, 4, taxi)
        self.add_edge(13, 14, bus_underground)
        self.add_edge(13, 23, taxi_bus)
        self.add_edge(13, 24, taxi)
        self.add_edge(13, 52, bus)
        self.add_edge(13, 52, bus)
        self.add_edge(13, 46, underground)
        self.add_edge(13, 67, underground)
        self.add_edge(13, 89, underground)
        self.add_edge(14, 13, bus_underground)
        self.add_edge(14, 15, taxi_bus)
        self.add_edge(14, 25, taxi)
        self.add_edge(15, 5, taxi)
        self.add_edge(15, 14, taxi_bus)
        self.add_edge(15, 16, taxi)
        self.add_edge(15, 26, taxi)
        self.add_edge(15, 28, taxi)
        self.add_edge(15, 29, bus)
        self.add_edge(15, 41, bus)
        self.add_edge(16, 5, taxi)
        self.add_edge(16, 15, taxi)
        self.add_edge(16, 28, taxi)
        self.add_edge(16, 29, taxi)
        self.add_edge(17, 7, taxi)
        self.add_edge(17, 29, taxi)
        self.add_edge(17, 30, taxi)
        self.add_edge(18, 8, taxi)
        self.add_edge(18, 31, taxi)
        self.add_edge(18, 43, taxi)
        self.add_edge(19, 8, taxi)
        self.add_edge(19, 9, taxi)
        self.add_edge(19, 32, taxi)
        self.add_edge(20, 2, taxi)
        self.add_edge(20, 9, taxi)
        self.add_edge(20, 33, taxi)
        self.add_edge(21, 10, taxi)
        self.add_edge(21, 33, taxi)
        self.add_edge(22, 3, bus)
        self.add_edge(22, 11, taxi)
        self.add_edge(22, 23, taxi_bus)
        self.add_edge(22, 34, bus)
        self.add_edge(22, 35, bus)
        self.add_edge(22, 65, bus)
        self.add_edge(23, 3, bus)
        self.add_edge(23, 12, taxi)
        self.add_edge(23, 13, bus)
        self.add_edge(23, 22, taxi_bus)
        self.add_edge(23, 37, taxi)
        self.add_edge(23, 67, bus)
        self.add_edge(24, 13, taxi)
        self.add_edge(24, 37, taxi)
        self.add_edge(24, 38, taxi)
        self.add_edge(25, 14, taxi)
        self.add_edge(25, 38, taxi)
        self.add_edge(25, 39, taxi)
        self.add_edge(26, 15, taxi)
        self.add_edge(26, 27, taxi)
        self.add_edge(26, 39, taxi)
        self.add_edge(27, 26, taxi)
        self.add_edge(27, 28, taxi)
        self.add_edge(27, 40, taxi)
        self.add_edge(28, 15, taxi)
        self.add_edge(28, 26, taxi)
        self.add_edge(28, 27, taxi)
        self.add_edge(28, 41, taxi)
        self.add_edge(29, 6, taxi)
        self.add_edge(29, 15, bus)
        self.add_edge(29, 16, taxi)
        self.add_edge(29, 17, taxi)
        self.add_edge(29, 41, bus)
        self.add_edge(29, 42, bus)
        self.add_edge(29, 55, bus)
        self.add_edge(29, 55, bus)
        self.add_edge(30, 17, taxi)
        self.add_edge(30, 42, taxi)
        self.add_edge(31, 18, taxi)
        self.add_edge(31, 43, taxi)
        self.add_edge(31, 44, taxi)
        self.add_edge(32, 19, taxi)
        self.add_edge(32, 33, taxi)
        self.add_edge(32, 44, taxi)
        self.add_edge(32, 45, taxi)
        self.add_edge(33, 20, taxi)
        self.add_edge(33, 21, taxi)
        self.add_edge(33, 32, taxi)
        self.add_edge(33, 46, taxi)
        self.add_edge(34, 10, taxi)
        self.add_edge(34, 22, taxi_bus)
        self.add_edge(34, 46, bus)
        self.add_edge(34, 47, taxi)
        self.add_edge(34, 48, taxi)
        self.add_edge(34, 63, bus)
        self.add_edge(35, 22, taxi)
        self.add_edge(35, 36, taxi)
        self.add_edge(35, 48, taxi)
        self.add_edge(35, 65, taxi)
        self.add_edge(36, 35, taxi)
        self.add_edge(36, 37, taxi)
        self.add_edge(36, 49, taxi)
        self.add_edge(37, 23, taxi)
        self.add_edge(37, 24, taxi)
        self.add_edge(37, 36, taxi)
        self.add_edge(37, 50, taxi)
        self.add_edge(38, 24, taxi)
        self.add_edge(38, 25, taxi)
        self.add_edge(38, 50, taxi)
        self.add_edge(38, 51, taxi)
        self.add_edge(39, 25, taxi)
        self.add_edge(39, 26, taxi)
        self.add_edge(39, 51, taxi)
        self.add_edge(39, 52, taxi)
        self.add_edge(40, 27, taxi)
        self.add_edge(40, 41, taxi)
        self.add_edge(40, 52, taxi)
        self.add_edge(40, 53, taxi)

    def add_edge(self, departure, destination, travel_option, x_coordinate=0, y_coordinate=0):
        edge = Edge(travel_option, destination)
        if not self.node_list[departure]:
            node = Node(departure, x_coordinate, y_coordinate)
            self.node_list[departure] = node
        self.node_list[departure].add_edge(edge)

    def show_options(self, starting_point, travelmethod):
        self.old_possible_node_numbers.clear()
        self.old_possible_node_numbers = self.currently_possible_node_numbers
        self.currently_possible_node_numbers.clear()
        temp_destination_list = []
        for node_number in self.old_possible_node_numbers:
            if travelmethod == ["black ticket"]:
                temp_destination_list = self.node_list[node_number].destinations_with_travelmethod()
            else:
                temp_destination_list = self.node_list[node_number].destinations_with_travelmethod(travelmethod)
            for i in temp_destination_list:
                if not i in self.currently_possible_node_numbers:
                    self.currently_possible_node_numbers.append(i)

        print("possible locations:")
        print(self.currently_possible_node_numbers)
